Solution 1
class Solution {
public:
    bool increasingTriplet(vector<int>& nums) {
        int n = nums.size();
        if(n<3) return false;
        vector<int> small(n),large(n);small[0]=500000;large[n-1]=0;
        for(int i=1; i<n; i++){
            small[i]=min(nums[i-1],small[i-1]);
        }
        for(int i=n-2;i>=0;i--){
            large[i]=max(nums[i+1],large[i+1]);
        }
        for(int i=1; i<n-1; i++){
            if(small[i]<nums[i] && nums[i]<large[i]) return true;
        }
        return false;
    }
};

Solution 2

class Solution {
public:
    bool increasingTriplet(vector<int>& num) {
        int n = num.size();
        if(n<3) return false;
        int l= INT_MAX, m = INT_MAX;
        for(int i=0; i<n;i++){
            if(num[i]<=l){
                l = num[i];
            }
            else if(num[i]<=m){
                m = num[i];
            }
            else return true;
        }
        return false;
    }
};



basically think like
if i have a second, then there was a first one before so even if i change the first one and i see one greater than second one then it's okay
