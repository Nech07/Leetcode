class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int n = nums.size();
        if(n<3 || nums[0]>0) return {};
        unordered_map <int,int> mp;
        for(int i=0; i<n; i++){
            mp[nums[i]]=i;
        }
        vector<vector<int>>ans;
        for(int i=0 ; i<n-2; i++){
            if(nums[i]>0)break;
            for(int j=i+1; j<n-1; j++){
                int needed = -1*(nums[i]+nums[j]);
                if(mp.count(needed) && mp.find(needed)->second >j){
                    ans.push_back({nums[i],nums[j],needed});
                }
                j = mp.find(nums[j])->second;
            }
            i = mp.find(nums[i])->second;
        }
        return ans;
    }
};
